import aiohttp
import asyncio
import json

BASE_URL = "https://data.egov.kz/api/v4"

# --- –°–ø–∏—Å–æ–∫ API –Ω–∞–±–æ—Ä–æ–≤ –¥–∞–Ω–Ω—ã—Ö ---
DATASETS = {
    "company": "reestr_yuridicheskikh_lits/v1",
    "nds": "nds_registraciya/v1",
    "license": "licenzii_i_razresheniya/v1",
    "court": "sudebnye_dela/v1",
    "exec": "ispolnitelnoe_proizvodstvo/v1",
    "zakup": "gos_zakup_uchastniki/v1",
    "stats": "stat_predpriyatiya/v1"
}


async def fetch_json(session, url):
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ –ø–æ–ª—É—á–∞–µ—Ç JSON —Å API data.egov.kz"""
    try:
        async with session.get(url, timeout=15) as response:
            if response.status == 200:
                data = await response.text()
                try:
                    return json.loads(data)
                except json.JSONDecodeError:
                    return None
            else:
                print(f"–û—à–∏–±–∫–∞: {url} ‚Äî {response.status}")
                return None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ {url}: {e}")
        return None


async def search_company(query):
    """
    –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –ë–ò–ù –∫–æ–º–ø–∞–Ω–∏–∏.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö API.
    """
    async with aiohttp.ClientSession() as session:
        results = {}

        for key, endpoint in DATASETS.items():
            url = f"{BASE_URL}/{endpoint}?source=" + json.dumps({
                "query": {
                    "bool": {
                        "should": [
                            {"match_phrase": {"bin": query}},
                            {"match_phrase": {"company_name": query}},
                            {"match_phrase": {"name": query}}
                        ]
                    }
                },
                "size": 5
            }, ensure_ascii=False)

            data = await fetch_json(session, url)
            results[key] = data if data else []

        return results


def format_result(data):
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –≤—ã–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ Telegram."""
    text = "üè¢ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏:*\n\n"

    # --- –û—Å–Ω–æ–≤–Ω—ã–µ —Å–≤–µ–¥–µ–Ω–∏—è ---
    company = data.get("company", [])
    if company:
        c = company[0]
        text += f"**{c.get('name', '-') }**\n"
        text += f"–ë–ò–ù: `{c.get('bin', '-')}`\n"
        text += f"–ê–¥—Ä–µ—Å: {c.get('address', '-')}\n"
        text += f"–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {c.get('registration_date', '-')}\n"
        text += f"–†—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å: {c.get('director', '-')}\n\n"
    else:
        text += "‚ùå –ö–æ–º–ø–∞–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\n\n"

    # --- –ù–î–° ---
    nds = data.get("nds", [])
    if nds:
        n = nds[0]
        text += f"üí∞ *–ù–î–°:* {n.get('status', '-')}\n\n"

    # --- –°—É–¥–µ–±–Ω—ã–µ –¥–µ–ª–∞ ---
    court = data.get("court", [])
    if court:
        text += f"‚öñÔ∏è –°—É–¥–µ–±–Ω—ã–µ –¥–µ–ª–∞: {len(court)}\n"
        for c in court[:3]:
            text += f"  ‚Ä¢ {c.get('case_number', '-')}: {c.get('case_status', '-')}\n"
        text += "\n"

    # --- –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ ---
    execs = data.get("exec", [])
    if execs:
        text += f"üîí –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞: {len(execs)}\n\n"

    # --- –ì–æ—Å–∑–∞–∫—É–ø–∫–∏ ---
    zakup = data.get("zakup", [])
    if zakup:
        text += f"üìÑ –ì–æ—Å–∑–∞–∫—É–ø–∫–∏: {len(zakup)} –∑–∞–ø–∏—Å–µ–π\n\n"

    # --- –õ–∏—Ü–µ–Ω–∑–∏–∏ ---
    lic = data.get("license", [])
    if lic:
        text += f"üßæ –õ–∏—Ü–µ–Ω–∑–∏–∏: {len(lic)}\n\n"

    # --- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ ---
    stats = data.get("stats", [])
    if stats:
        s = stats[0]
        text += f"üìä –†–∞–∑–º–µ—Ä –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏—è: {s.get('company_size', '-')}\n"
        text += f"üìà –û–±–æ—Ä–æ—Ç: {s.get('turnover', '-')}\n\n"

    return text


# --- –¢–µ—Å—Ç –ª–æ–∫–∞–ª—å–Ω–æ ---
if __name__ == "__main__":
    async def main():
        query = "–ö–∞–∑–û–π–ª–ì—Ä—É–ø–ø"
        data = await search_company(query)
        print(format_result(data))

    asyncio.run(main())
